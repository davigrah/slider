{"version":3,"file":"effect-material.js.map","sources":["../demo-vite/effect-material.esm.js"],"sourcesContent":["function elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\n\nfunction effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides,\n}) {\n  const { activeIndex } = swiper;\n  const getSlide = (el) => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(\n        (slideEl) => slideEl.shadowRoot && slideEl.shadowRoot === el.parentNode,\n      )[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter((transformEl) => {\n        const el = transformEl.classList.contains('swiper-slide-transform')\n          ? getSlide(transformEl)\n          : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach((el) => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true,\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}\n\nexport default function EffectMaterial({ swiper, on }) {\n  const setTranslate = () => {\n    const { slides, slidesSizesGrid, params, size: swiperSize } = swiper;\n    const { slidesPerView, spaceBetween, cssMode, centeredSlides } = params;\n    const large = centeredSlides ? 0.5 : 0.65;\n    const small = centeredSlides ? 0.5 : 0.35;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const materialEl = slideEl.querySelector('.swiper-material-wrapper');\n      const opacityEls = slideEl.querySelectorAll(\n        '.swiper-material-animate-opacity',\n      );\n      const scaleEls = slideEl.querySelectorAll('[data-swiper-material-scale]');\n      const progress = -slideEl.progress;\n      const offset = slideEl.swiperSlideOffset;\n      const swiperTranslate = swiper.translate;\n      let scale;\n      let translate = 0;\n      let opacity = 0;\n      const currentSlideSize = slidesSizesGrid[i];\n      const scaleDiff = spaceBetween / 2 / currentSlideSize;\n      const cssModeTranslateOffset = cssMode ? swiperTranslate : 0;\n      const isCenteredOdd = centeredSlides && slidesPerView % 2 === 1;\n      const isCenteredEven = centeredSlides && slidesPerView % 2 === 0;\n\n      if (progress <= 0) {\n        // SLIDES BEFORE ACTIVE SLIDE / PREVIOUS\n        if (centeredSlides && slidesPerView > 1) {\n          // CENTERED/ACTIVE SLIDES\n          if (progress <= 0 && progress >= -(slidesPerView - 2)) {\n            translate = swiperTranslate;\n            scale = 1;\n            opacity = 1;\n          }\n\n          // current to zero\n          if (\n            isCenteredOdd &&\n            progress < -(slidesPerView - Math.ceil(slidesPerView / 2))\n          ) {\n            const currentProgress =\n              Math.ceil(slidesPerView / 2) - Math.abs(progress);\n            scale = currentProgress;\n            opacity = scale ** 4;\n            translate =\n              swiperTranslate +\n              currentSlideSize * (1 - currentProgress) * (1 + scaleDiff * 2);\n          }\n          // current to large\n          if (\n            isCenteredEven &&\n            progress < -(slidesPerView / 2 - 1) &&\n            progress >= -(slidesPerView / 2)\n          ) {\n            const currentProgress = slidesPerView / 2 - Math.abs(progress);\n\n            scale =\n              large -\n              scaleDiff +\n              (small + scaleDiff * 2) *\n                (slidesPerView / 2 - Math.abs(progress));\n\n            opacity = ((scale - large) / (1 - large)) ** 4;\n            translate =\n              swiperTranslate +\n              currentSlideSize * (small + scaleDiff) * (1 - currentProgress);\n          }\n\n          // large to zero\n          if (isCenteredEven && progress < -slidesPerView / 2) {\n            let currentProgress = slidesPerView / 2 + 1 - Math.abs(progress);\n            // let translateAdd = 0;\n            scale = 0;\n            if (currentProgress >= 0) {\n              currentProgress =\n                -scaleDiff * 2 + currentProgress * (1 + scaleDiff * 2);\n              currentProgress = Math.max(Math.min(currentProgress, 1), 0);\n              scale = (small - scaleDiff) * currentProgress;\n            }\n            translate =\n              swiperTranslate +\n              currentSlideSize * (small + scaleDiff) * (2 - currentProgress) +\n              currentSlideSize * (small - scaleDiff) * (1 - currentProgress);\n          }\n        } else {\n          // NOT CENTERED SLIDES\n          scale = 1 + progress;\n          translate = -offset;\n          opacity = scale ** 4;\n        }\n      }\n      if (slidesPerView === 1) {\n        if (progress > 0) {\n          scale = 1 - progress;\n          translate = -offset + swiperSize * Math.min(progress, 1);\n          opacity = scale ** 4;\n        }\n      } else {\n        // ACTIVE SLIDES\n        if (progress > 0 && progress <= slidesPerView - 2) {\n          translate = swiperTranslate;\n          scale = 1;\n          opacity = 1;\n        }\n        // SLIDES AFTER ACTIVE SLIDE / NEXT\n        // large to current\n        const isLargeToCurrent = isCenteredEven\n          ? progress > slidesPerView / 2 - 1 && progress <= slidesPerView / 2\n          : progress > slidesPerView - 2 && progress <= slidesPerView - 1;\n        if (isLargeToCurrent) {\n          const minus = isCenteredEven ? Math.floor(slidesPerView / 2) : 1;\n          scale =\n            large -\n            scaleDiff +\n            (small + scaleDiff * 2) *\n              (slidesPerView - minus - Math.abs(progress));\n          translate = swiperTranslate;\n          opacity = ((scale - large) / (1 - large)) ** 4;\n        }\n        // zero to current\n        if (\n          isCenteredOdd &&\n          progress > slidesPerView - Math.ceil(slidesPerView / 2)\n        ) {\n          const currentProgress =\n            Math.ceil(slidesPerView / 2) - (slidesPerView - Math.abs(progress));\n          translate =\n            swiperTranslate -\n            currentSlideSize * (scaleDiff * 2) * currentProgress;\n          scale = 1 - currentProgress;\n          opacity = scale ** 4;\n        }\n        // small to large: 0.35 -> 0.65\n        if (\n          progress > slidesPerView - 1 &&\n          progress <= slidesPerView &&\n          !centeredSlides\n        ) {\n          const currentProgress = slidesPerView - Math.abs(progress);\n          const largeWithDiff = large - scaleDiff;\n          const smallWithDiff = small - scaleDiff;\n          scale =\n            smallWithDiff + (largeWithDiff - smallWithDiff) * currentProgress;\n          translate =\n            swiperTranslate -\n            currentSlideSize * (small + scaleDiff) * (1 - currentProgress);\n        }\n        // zero to small: 0 -> 0.35\n        if (\n          progress > (centeredSlides ? slidesPerView / 2 : slidesPerView) &&\n          !isCenteredOdd\n        ) {\n          let currentProgress =\n            (centeredSlides ? slidesPerView / 2 + 1 : slidesPerView + 1) -\n            Math.abs(progress);\n          let translateAdd = 0;\n          scale = 0;\n          if (currentProgress >= 0) {\n            currentProgress =\n              -scaleDiff * 2 + currentProgress * (1 + scaleDiff * 2);\n            currentProgress = Math.max(Math.min(currentProgress, 1), 0);\n            scale = (small - scaleDiff) * currentProgress;\n            translateAdd =\n              -currentProgress * (small + scaleDiff) * currentSlideSize +\n              currentProgress * spaceBetween;\n          }\n          translate =\n            -offset + swiperSize * Math.min(progress, 1) + translateAdd;\n          opacity = 0;\n        }\n      }\n      if (scale < 0) {\n        scale = 0;\n      }\n      if (scale > 1) {\n        scale = 1;\n      }\n      // if (scale === 0) {\n      //   scale = 0.0001;\n      // }\n      slideEl.style.setProperty('--swiper-material-scale', scale);\n      opacityEls.forEach((opacityEl) => {\n        opacityEl.style.opacity = opacity;\n      });\n      scaleEls.forEach((scaleEl) => {\n        let elementScale = parseFloat(\n          scaleEl.getAttribute('data-swiper-material-scale'),\n        );\n        if (Number.isNaN(elementScale) || (!elementScale && elementScale !== 0))\n          elementScale = 1;\n        scaleEl.style.transform = `scale(${\n          1 + (elementScale - 1) * (1 - scale)\n        })`;\n      });\n      if (swiper.isHorizontal()) {\n        materialEl.style.width = `${100 * scale}%`;\n        materialEl.style.transform = `translate3d(${\n          translate - cssModeTranslateOffset\n        }px, 0, 0)`;\n      } else {\n        materialEl.style.height = `${100 * scale}%`;\n        materialEl.style.transform = `translate3d(0, ${\n          translate - cssModeTranslateOffset\n        }px, 0)`;\n      }\n    }\n  };\n  const setTransition = (duration) => {\n    const { slides } = swiper;\n    const transformElements = [];\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const materialEl = slideEl.querySelector('.swiper-material-wrapper');\n      const opacityEls = slideEl.querySelectorAll(\n        '.swiper-material-animate-opacity',\n      );\n      const scaleEls = slideEl.querySelectorAll('[data-swiper-material-scale]');\n\n      [materialEl, ...scaleEls, ...opacityEls].forEach((opacityEl) => {\n        opacityEl.style.transitionDuration = `${duration}ms`;\n      });\n\n      transformElements.push(materialEl);\n    }\n\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true,\n    });\n  };\n\n  on('beforeInit', () => {\n    if (swiper.params.effect !== 'material') return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}material`);\n    if (swiper.isElement && swiper.hostEl) {\n      swiper.hostEl.classList.add(`swiper-${swiper.params.direction}`);\n    }\n    const overwriteParams = {\n      loopAdditionalSlides: 1,\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode,\n    };\n\n    Object.assign(swiper.params, overwriteParams);\n    Object.assign(swiper.originalParams, overwriteParams);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== 'material') return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== 'material') return;\n    setTransition(duration);\n  });\n  on('slidesUpdated', () => {\n    if (\n      !swiper.params.centeredSlides &&\n      swiper.params.slidesPerView > 1 &&\n      !swiper.params.loop\n    ) {\n      const lastItem = swiper.snapGrid[swiper.snapGrid.length - 1];\n      swiper.snapGrid.push(\n        lastItem + swiper.slidesSizesGrid[0] + swiper.params.spaceBetween,\n      );\n    }\n    swiper.el.style.setProperty(\n      '--swiper-material-slide-size',\n      `${swiper.slidesSizesGrid[0]}px`,\n    );\n  });\n}\n"],"names":[],"mappings":"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"}